# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to Firebase - Dev

on:
  push:
    branches: [ "main" ]

jobs:
  BuildAndDeployInFunctionsInFirebase:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 
      uses: actions/checkout@v3
    - name: Use Node.js 14x
      uses: actions/setup-node@v3
      with: 
        cache-dependency-path: functions-dashboard/package-lock.json
        node-version: 14.x
        cache: 'npm'
    - name: Create config file
      working-directory: ./functions-dashboard/src/config
      env:
        DEV_FIREBASE_PROJECT_ID: ${{ secrets.DEV_FIREBASE_PROJECT_ID }}
        DEV_FIREBASE_DATABASE_URL: ${{ secrets.DEV_FIREBASE_DATABASE_URL }}
      run: |
        touch .dev
        echo { >> serviceAccountKey.json
        echo \"projectId\":\"$DEV_FIREBASE_PROJECT_ID\", >> serviceAccountKey.json
        echo \"databaseURL\":\"$DEV_FIREBASE_DATABASE_URL\" >> serviceAccountKey.json
        echo } >> serviceAccountKey.json
        echo "cat serviceAccountKey.json"
        cat serviceAccountKey.json

    - name: Build the aplication 
      working-directory: ./functions-dashboard
      run: npm ci
       
    - name: Install firebase-tools
      working-directory: ./functions-dashboard
      run: npm install -g firebase-tools
    
    - name: Install Jest globally
      working-directory: ./functions-dashboard
      run: sudo npm install -g jest
 
    - name: Unit test with jest
      working-directory: ./functions-dashboard
      run: npm test
    
    - name: Generating automatic tag 
      uses: Klemensas/action-autotag@stable
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        package_root: ./functions-dashboard
        tag_prefix: "Dev_v"

    - name: Use firebase project
      working-directory: ./functions-dashboard
      run: firebase use --token ${{ secrets.DEV_FIREBASE_TOKEN }} --add ${{ secrets.DEV_FIREBASE_PROJECT_ID }}
    - name: Deploy firebase Dev
      working-directory: ./functions-dashboard
      run: firebase deploy --token ${{ secrets.DEV_FIREBASE_TOKEN }} --only functions --non-interactive
